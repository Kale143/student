name: Django CI/CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install django-countries
          pip install -r student_project_django-main/Student_project/requirements.txt

      - name: Run migrations locally (optional)
        run: |
          source env/bin/activate
          cd student_project_django-main/Student_project
          python manage.py migrate

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/student/student_project_django-main

            # Update packages and install python3-venv if missing
            sudo apt-get update
            sudo apt-get install -y python3-venv

            # Create virtualenv if it doesn't exist
            [ ! -d env ] && python3 -m venv env

            source env/bin/activate

            # Pull latest changes
            git pull origin main

            # Install dependencies
            pip install django-countries
            pip install -r Student_project/requirements.txt

            # Run migrations and collectstatic
            cd Student_project
            python manage.py migrate --noinput
            python manage.py collectstatic --noinput

            # Kill existing gunicorn processes
            pkill gunicorn || true

            # Start Gunicorn in background
            nohup gunicorn --workers 3 --bind unix:/tmp/gunicorn.sock Student_project.wsgi:application > gunicorn.log 2>&1 &

            # Adjust socket permissions for nginx (assuming nginx runs as www-data)
            sudo chown www-data:www-data /tmp/gunicorn.sock
            sudo chmod 660 /tmp/gunicorn.sock

            # Restart nginx
            sudo systemctl restart nginx

